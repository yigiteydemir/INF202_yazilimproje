
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Yigit
 */
public class yonetimekrani extends javax.swing.JFrame {

    /**
     * Creates new form yonetimekrani
     */
    public yonetimekrani() throws ClassNotFoundException {
        initComponents();
        show_user();
        setTitle("Management Panel");
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width/2 - getWidth()/2, size.height/2 - getHeight()/2);
    }
    
    public ArrayList<User> userList() throws ClassNotFoundException {
        ArrayList<User> usersList = new ArrayList<>();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projekt?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey","root","123456");
            String query="SELECT * FROM person_info";
            Statement st=con.createStatement();
            ResultSet rs=st.executeQuery(query);
            User user;
            while(rs.next()){
                user=new User(rs.getInt("id_user"), rs.getString("name_user"), rs.getString("level_user"), rs.getString("signature_user"), rs.getString("persontype"), rs.getString("date_user"));
                
                usersList.add(user);
                
            }
            
            
        }
         catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return usersList;
    }
    public void show_user() throws ClassNotFoundException{
        ArrayList<User> list = userList();
        DefaultTableModel model = (DefaultTableModel)jShowTable.getModel();
        Object[] row = new Object[6];
        for(int i = 0; i < list.size(); i++){
            row[0] = list.get(i).getId();
            row[1] = list.get(i).getName();
            row[2] = list.get(i).getLevel();
            row[3] = list.get(i).getSignature();
            row[4] = list.get(i).getPersontype();
            row[5] = list.get(i).getDate();

            model.addRow(row);


        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jShowTable = new javax.swing.JTable();
        panel1 = new java.awt.Panel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        levelField = new javax.swing.JTextField();
        signatureField = new javax.swing.JTextField();
        personType = new javax.swing.JComboBox<>();
        registerButton = new javax.swing.JButton();
        sıfırlaButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jShowTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Klasse", "Unterschrift", "Benutzertyp", "Date"
            }
        ));
        jShowTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jShowTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jShowTable);

        jLabel1.setText("Vor- und Nachname ");

        jLabel2.setText("Klasse");

        jLabel3.setText("Unterschrift");

        jLabel4.setText("Benutzertyp");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        personType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Operator", "Rezensenten", "Bestätigend", "Kunde" }));

        registerButton.setText("Benutzer Erstellen ");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        sıfırlaButton.setText("Rücksetzen");
        sıfırlaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sıfırlaButtonActionPerformed(evt);
            }
        });

        updateButton.setText("Benutzer Aktualisieren ");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Benutzer Löschen ");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Datum des Zertifikats");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(sıfırlaButton))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(updateButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(73, 73, 73))
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(levelField, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(nameField)
                            .addComponent(signatureField, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(panel1Layout.createSequentialGroup()
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(personType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))))
                .addGap(25, 25, 25))
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(levelField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(signatureField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(personType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(registerButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(sıfırlaButton))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed
         try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projekt?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey","root","123456");
            String query="insert into person_info(name_user, level_user, signature_user, persontype, date_user) values(?,?,?,?,?)";
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1, nameField.getText());
            pst.setString(2, levelField.getText());
            pst.setString(3, signatureField.getText());

            String type;
            type=personType.getSelectedItem().toString();
            pst.setString(4, type);
            SimpleDateFormat dt=new SimpleDateFormat("yyyy-MM-dd");
            String date = dt.format(dateChooser.getDate());
            pst.setString(5, date);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)jShowTable.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "Benutzer erfolgreich hinzugefügt!");

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(yonetimekrani.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(yonetimekrani.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_registerButtonActionPerformed

    private void sıfırlaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sıfırlaButtonActionPerformed
        nameField.setText("");
        levelField.setText("");
        signatureField.setText("");
        personType.setSelectedIndex(0);
    }//GEN-LAST:event_sıfırlaButtonActionPerformed

    private void jShowTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jShowTableMouseClicked
            int i= jShowTable.getSelectedRow();
            TableModel model =jShowTable.getModel();
            nameField.setText(model.getValueAt(i, 1).toString());
            levelField.setText(model.getValueAt(i, 2).toString());
            signatureField.setText(model.getValueAt(i, 3).toString());
            
            String persontype1 = model.getValueAt(i, 4).toString();
                   switch(persontype1){
                       case "Operator":
                           personType.setSelectedIndex(0);
                           break;
                       case "Rezensenten":
                           personType.setSelectedIndex(1);
                           break;
                       case "Bestätigend":
                           personType.setSelectedIndex(2);
                           break;
                       case "Kunde":
                           personType.setSelectedIndex(3);
                           break;
                   }              
                          try{
                          int srow = jShowTable.getSelectedRow();
                          Date date = new SimpleDateFormat("yyyy-MM-dd").parse((String)model.getValueAt(srow,5));
                          dateChooser.setDate(date);
                              
                       }  catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e);
                        }
                      
                           
                      }//GEN-LAST:event_jShowTableMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projekt?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey","root","123456");
            int row = jShowTable.getSelectedRow();
            String value = (jShowTable.getModel().getValueAt(row, 0).toString());
            String query ="UPDATE person_info SET name_user=?, level_user=?, signature_user=?, persontype=?, date_user=? WHERE id_user="+value;
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1, nameField.getText());
            pst.setString(2, levelField.getText());
            pst.setString(3, signatureField.getText());

            String type;
            type=personType.getSelectedItem().toString();
            pst.setString(4, type);
            SimpleDateFormat dt=new SimpleDateFormat("yyyy-MM-dd");
            String date = dt.format(dateChooser.getDate());
            pst.setString(5, date);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)jShowTable.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "Benutzerinformationen aktualisiert!");
    }                                            
            catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int sure = JOptionPane.showConfirmDialog(null, "Sind Sie sicher, dass Sie löschen möchten?", "Delete", JOptionPane.YES_NO_OPTION);
        if(sure == 0) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projekt?useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=Turkey","root","123456");
            int row = jShowTable.getSelectedRow();
            String value = (jShowTable.getModel().getValueAt(row, 0).toString());
            String query="DELETE FROM person_info where id_user="+value;
            PreparedStatement pst= con.prepareStatement(query);
            pst.executeUpdate();
            DefaultTableModel model = (DefaultTableModel)jShowTable.getModel();
            model.setRowCount(0);
            show_user();
            JOptionPane.showMessageDialog(null, "Benutzerinformationen gelöscht!");

            
    }//GEN-LAST:event_deleteButtonActionPerformed
           catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
    }
    }       /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(yonetimekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(yonetimekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(yonetimekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(yonetimekrani.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new yonetimekrani().setVisible(true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(yonetimekrani.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jShowTable;
    private javax.swing.JTextField levelField;
    private javax.swing.JTextField nameField;
    private java.awt.Panel panel1;
    private javax.swing.JComboBox<String> personType;
    private javax.swing.JButton registerButton;
    private javax.swing.JTextField signatureField;
    private javax.swing.JButton sıfırlaButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
